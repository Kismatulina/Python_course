# print(5, 6, 7)
# Value = None - пустая строка
# n = None

# n = 5 - узнать какой тип данных в переменной
# print(type(n))
# n = 'hdjkfl'
# print(type(n)) 

# n = 'hello "world"' - объявить строку кавычками
# n = "hello 'world'"
# n = 'hello\ 'world' - не получается  и  с двойными кавычками
# print(n)

# a = 5  - интерполяция-вывести числа и текст
# b = 6.566
# c = 'hlkj'
# print(f"{a} + {b} + {c}")  интерполяция-вывести числа и текст, так долго
# print('{} - {} - {}' .format(a,b,c)) вывести в фигурные скобки все что лежит в format(a,b,c)

# print("Введите первое число: ") #- ввод данных через инпут, если числа, то инт добавить
# a = int(input())
# b = int(input("Введите второе число: "))
# print(a, '+', b, '=', a + b)

# a = 1.4562 #- округление чисел, 3-число которое необходимо оставить после запятой
# b = 2.8899
# print(round(a*b, 3))

# iter = 2   # Сокращенные операции присваивания -Сокращенные представления
# iter += 3 # iter = iter + 3   это равно наша переменная 2 плюс 3
# iter -= 4 # iter = iter - 4
# iter *= 5 # iter = iter * 5
# iter /= 5 # iter = iter / 5
# iter //= 5 # iter = iter // 5
# iter %= 5 # iter = iter % 5
# iter **= 5 # iter = iter ** 5  мы хотим наш iter = 2 ввозвести в 5 степень

# # Сравнение в Python / Результатом чего будет либо True, либо False
# a = 1 > 4
# print(a) # False
# # —------------------------------------
# a = 1 < 4 and 5 > 2
# print(a) # True
# # —------------------------------------
# a = 1 == 2
# print(a) # False
# # —------------------------------------
# a = 1 != 2
# print(a) # True
# # —------------------------------------
# Можно сравнивать не только числовые значения, но и строки:
# a = 'qwe'
# b = 'qwe'
# print(a == b) # True
# # —------------------------------------
# В Python можно использовать тройные и даже четверные
# неравенства:
# a = 1 < 3 < 5 < 10
# print (a) # True

# username = input('Введите имя: ') # управляющие конструкции
# if username == 'Маша' :
#     print('Ура, это же Маша!')
# elif username == 'Марина' :
#     print('я так ждала Вас, Марина!')  
# elif username == 'Ильнар' :
#     print('Ильнар - топ') 
# else:
#     print('Привет, ', username)     

# n = 423 # сумма всех чисел
# summa = 0
# while n > 0 : # пока n > 0 выполняются действия:
#     x = n % 10  # в число х берем остаток от деления на 10 (3)
#     summa = summa + x # в сумму добавляем это число (0+3)
#     n = n // 10 # делим наше число на целочисленное 10 (423:10=42)
# print(summa) # выводим сумму 4+2+3=9

# Управляющие конструкции: while-else пока - иначе
# i = 0
# while i < 5:
#     if i == 3:
#         break # получим 3, внутри else будет игнорироваться, так как цикл завершился не самостоятельно.
#     i = i + 1
# else:              # Пример программного кода без использования break: получим Пожалуй хватит 5
#     print('Пожалуй')
#     print('хватит )')
# print(i)

# Задача с методом флажка (break лучше не использовать)
# Пользователь вводит число, необходимо найти минимальный делитель данного числа
# Решение:
# n = int(input())
# flag = True
# i = 2
# while flag: # наш цикл while будет выполняться пока наш флаг равен True
#     if n % i == 0: # если остаток при делении числа n на i равен 0, т.е мы нашли какойто делитель
#         flag = False # то меняем наш флаг на  False 
#         print(i) # и соответственно наш цикл завершает свою работу
#     elif i > n // 2: # делитель числа не может превышать введенное число, деленное на 2 (число не может делится на число,которое больше его половины,30 можем поделить на 2,3,5,6,10,15 дальше делителей нет,т.е мы останавливаемся на половине )
#         print(n)
#         flag = False
#     i += 1

# Цикл for, функция range() используются вместе в основном:
# Цикл for наша переменная i будет принимать значения:
# for i in 1, -2, 3, 14, 5:
#     print(i)

# функция range() - генерирует последовательность
# r = range(100, 0, -20) # range(100, 0, -20)
# for i in r:
#     print(i)  # 100 80 60 40 20

# a = 'qwerty'  # хотим вывести первую букву:
# print(a[0])

# a = 'qwerty'
# for i in a:  # пройтись по всей строке, т.е i поочередно принимает значение q w e r t y
#     print(i)

# Можно использовать вложенные циклы:
# line = "" # создаем переменную line которая является в пустой строке
# for i in range(5): # наша переменная range генерирует последовательность из пяти чисел,
#  # значит наш цикл for будет выполняться 5 раз. (по сути выводим нашу строку из пяти звездочек)
#     line = ""  #создаем пустую переменную line (для i получается - строки)
#     for j in range(5): #еще раз проходимся т.е. 
#         line += "*"  #к нашей строке 5 раз добавляем нашу звездочку (для столбцов)
#     print(line) # печатать после цикла (нет отступа line += "*"-это находится в теле главного цикла for i и 
# по сути выводим нашу строку из пяти звездочек)

# text = 'СъЕШЬ ещё этих МяГкИх французских булок'
# print(len(text)) # 39 узнать размер нашей строки
# print('ещё' in text) # True - может проверить есть ли наше слово в строке
# print(text.lower()) # съешь ещё этих мягких французских булок-позволяет перевести все буквы в нижний регистр
# print(text.upper()) # СЪЕШЬ ЕЩЁ ЭТИХ МЯГКИХ ФРАНЦУЗСКИХ БУЛОК- в верхний регистр
# print(text.replace('ещё','ЕЩЁ')) # СъЕШЬ ЕЩЁ этих МяГкИх французских булок-поменять сочетание наших символов в нашей строке

# Срезы (Отрицательное число в индексе — счёт с конца строки)
# print(text[0]) # c
# print(text[1]) # ъ
# print(text[len(text)-1]) # к
# print(text[-1]) # к-последняя буква, так же как и массивах отрицательное индексирование
# print(text[-5]) # б пятый элемент с конца
# print(text[:]) # съешь ещё этих мягких французских булок- все символы
# print(text[:2]) # съ хотим вывести с нулевого по второй, не включая его
# print(text[len(text)-2:]) # ок (берем со второй последней и до конца строки)
# print(text[2:9]) # ешь ещё
# print(text[6:-18]) # ещё этих мягких
# print(text[0:len(text):6]) # сеикакл (идем от нуля(c) по всей строке с шагом 6)
# print(text[::6]) # сеикакл (коротко - идем от нуля(c) по всей строке с шагом 6)
# text = text[2:9] + text[-5] + text[:2] # можно складывать и выводить текст
# print(text)
# Знакомство с языком Python (семинары)
# Урок 3. Списки и словари
# Задача №17. Решение в группах
# Дан список чисел. Определите, сколько в нем встречается различных чисел.
# Input: [1, 1, 2, 0, -1, 3, 4, 4]
# Output: 6
# lst = [1, 1, 2, 0, -1, 3, 4, 4]
# print = len(set(lst)) # 6 задача в одно решение /чтото не работает



# Дана последовательность из N целых чисел и число K. Необходимо сдвинуть всю последовательность
# (сдвиг - циклический) на K элементов вправо,  K – положительное число.
# Input:   [1, 2, 3, 4, 5] k = 3
# Output:  [3, 4, 5, 1, 2]

# lst = [1, 2, 3, 4, 5]
# k = 3
# for i in range(k):
#     num = lst.pop(-1)
#     lst.insert(0, num)
# print(lst)

# Напишите программу для печати всех уникальных значений в словаре. 
# Input:  [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"},
# {"VII": "S005"}, {"V":"S009"}, {"VIII":"S007"}] 
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}

# достали словарь из словаря:
# shop_dict = {0:{'name':'стул','кол-во': 3} , 5:{'name': 'стол','кол-во': 7} , 8:{'name': 'диван' , 'кол-во': 10}}
# print(shop_dict[5]['name'])

# 11:5
# start_lst = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII": "S005"}, {"V":"S009"}, {"VIII":"S007"}]

# val_list = []  #  создал пустой лист
# for little_dict in start_lst:  # для маленького словаря из данного словаря?
#     for val in little_dict.values():  # для  значений маленького словаря добавить?
#         val_list.append(val)
# print(set(val_list)) # напечатсть и создать пустой лист?

# семинра 5
# Задача №31. Общее обсуждение
# Последовательностью Фибоначчи называется
# последовательность чисел a0
# , a1
# , ..., an
# , ..., где
# a0
#  = 0, a1
#  = 1, ak
#  = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21

# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# Ввод:
# ноутбук
# Вывод:
# 12
# *Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет 
# определенную ценность. В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко; 
# D, G – 2 очка; 
# B, C, M, P – 3 очка; 
# F, H, V, W, Y – 4 очка; 
# K – 5 очков;
# J, X – 8 очков; 
# Q, Z – 10 очков. 
# А русские буквы оцениваются так: 
# А, В, Е, И, Н, О, Р, С, Т – 1 очко; 
# Д, К, Л, М, П, У – 2 очка; 
# Б, Г, Ё, Ь, Я – 3 очка; 
# Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков; 
# Ш, Э, Ю – 8 очков; 
# Ф, Щ, Ъ – 10 очков. 
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы.

# word = input('Введи слово и я посчитаю твои баллы: ')  # это списала задачу
# en_let = {'A':1,'E':1,'I':1,'O':1,'U':1,'L':1,'N':1,'S':1,'T':1,'R':1, 
#            'D':2,'G':2,
#            'B':3, 'C':3, 'M':3, 'P':3, 
#            'F':4, 'H':4, 'V':4, 'W':4, 'Y':4,
#            'K':5,
#            'J':8, 'X':8, 
#            'Q':10, 'Z':10}
# ru_let = {'А':1,'В':1,'Е':1,'И':1,'Н':1,'О':1,'Р':1,'С':1,'Т':1,
#            'Д':2,'К':2,'Л':2, 'М':2, 'П':2, 'У':2,
#            'Б':3, 'Г':3, 'Ё':3, 'Ь':3, 'Я':3,
#            'Й':4, 'Ы':4, 
#            'Ж':5, 'З':5, 'Х':5, 'Ц':5,'Ч':5,
#            'Ш':8, 'Э':8, 'Ю':8,
#            'Ф':10, 'Ш':10, 'Ъ':10}
# def sum_let(word):
#     total = 0
#     for letter in word:
#         if letter.upper() in en_let:
#             total += en_let[letter.upper()]
#         elif letter.upper() in ru_let:
#             total += ru_let[letter.upper()]
#     return total
# print('За слово', word.upper() , 'ты набрал', sum_let(word), 'баллов')

# start_lst = [{"А": "1"}, {"В": "1"}, {"Е": "1"}, {"И": "1"}, {"Н": "1"}, {"О": "1"}, {"Р": "1"}, {"С": "1"}, {"Т": "1"}]
# print("Введите слово: ")
# a = input()
# print(start_lst["А"]) 
# print(start_lst)

# d = dict()  # создали пустой словарь и можем сами создавать свой ключ:
# d['А'] = '1' # чтобы добавлять какие то значения, мы должны в нашем словаре указать ключ q 
# d['В'] = '1' # чтобы добавлять какие то значения, мы должны в нашем словаре указать ключ q 
# print(d) # выведит в одну строку {'q': 'gwerty', 'w': 'werty'}


# print("Введите первое число: ") #- ввод данных через инпут, если числа, то инт добавить
# a = int(input())
# b = int(input("Введите второе число: "))
# print(a, '+', b, '=', a + b)

# for item in dictionary: # for (k,v) in dictionary.items(): как фор взаимодействует с нашим словарем?:
#     print(item)  # будут выводится только наши ключи: up left down right
#     print('{}: {}'.format(item, dictionary[item])) # если к словарю обращаться то сначала к ключу('{}: {}'.format(item,) и 2е к значению dictionary[item]

# Операции со множествами в Python
# a = {а, в, е, и, н, о, Р, С, Т}
# b = {а, в, е, и, н,}
# c = a.copy() # c = {1, 2, 3, 5, 8} можем скопировать из а
# u = a.union(b) # u = {1, 2, 3, 5, 8, 13, 21} объединение а и b и раз уникальные значения 2 будет один раз
# i = a.intersection(b) # i = {8, 2, 5} пересечение т.е найти те элементы, которые есть в обеих множествах
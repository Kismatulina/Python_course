# Знакомство с языком Python (семинары)
# Урок 3. Списки и словари
# обсуждение домашней работы:
# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя –
# школьница. Петя помогает Кате по математике. Он задумывает два
# натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.
# 4 4 -> 2 2
# 5 6 -> 2 3

# import random 
# s = int(input("Введите первое число: "))
# p = int(input("Введите второе число: "))
# x = random.randint(1, s) # пример рандомно решить
# y = s - x # s = y + x
# while x * y != p: # если их перемножить и они не равны произведению, надо сгенерировать новый Х, но который не превосходит сумму s
#     x = random.randint(1, s) # надо сгенерировать новый Х, но который не превосходит сумму s
#     y = s - x # и  y присвоить снова s - x
# print(x,y)

# S = abs(int(input('Введите сумму: ')))  # пример математически решить по уравнениям с Дискрминатом
# P = abs(int(input('Введите произведение: '))) 
# y1 = int((S + ((-S) ** 2 - 4 * P) ** 0.5) / 2)  #(-S) ** 2 - 4 * P) нахождение дискриминанта , ** 0.5 это в степени (корень из дискриминанта это степень 1/2
# x1 = int((S - ((-S) ** 2 - 4 * P) ** 0.5) / 2)
# print(x1, y1)


# Задача №17. Решение в группах
# Дан список чисел. Определите, сколько в нем встречается различных чисел.
# Input: [1, 1, 2, 0, -1, 3, 4, 4]
# Output: 6
# lst = [1, 1, 2, 0, -1, 3, 4, 4]
# print(set(lst)) #  задача в одно решение /перевести список в множество(упорядоченный уникальный список set)
# print(len(set(lst))) # 6 задача в одно решение / а здесь через длину len посмотреть сколько различных чисел

# Задача №19. 
# Дана последовательность из N целых чисел и число K. Необходимо сдвинуть всю последовательность
# (сдвиг - циклический) на K элементов вправо,  K – положительное число.
# Input:   [1, 2, 3, 4, 5] k = 3 на три шага сдвинуть
# Output:  [3, 4, 5, 1, 2]

# n = 5 # сразу ввели без инпута
# #      0  1  2  3  4  индексы
# lst = [1, 2, 3, 4, 5]
# #      2  3  4  0  1  новые индексы встали так
# #     [3, 4, 5, 1, 2] должно получится
# k = 9
# k = k% n  # это чттобы взять только после запятой, а круги целые не брать, только не помню как нипсать через анд?
# lst[: n - k] # отрезали левую часть 1, 2,
# lst[n - k :] # отрезали правую часть 3, 4, 5
# print(lst[n - k :] + lst[: n - k]) #  и просто складываем


# n = 5 # сразу ввели без инпута, другой пример через pop
# lst = [1, 2, 3, 4, 5]
# k = 3
# for i in range(k): # нужно до к - раз сдвинуть 
#     num = lst.pop(-1)  # срезали 5 и поставили в начало(вернет 5ку),и 5 [1, 2, 3, 4] ; потом 4 5 [1, 2, 3] ; потом 3 4 5 [1, 2]
#     lst.insert(0, num) # и встваить в начало 0 (сначала индекс и потом число)
# print(lst)


#        0  1  2  3  4
# lst = [32, 53, 76, 67, 98]
# k = 3
# for i in range(len(lst)): # так обратьися к индексам списка
    # print(i)   #   выведит индексы  0  1  2  3  4
    # print(lst[i]) #  выведит наши элементы [32, 53, 76, 67, 98]

#     if lst[i] > 50:  # все что больше 50 заменить на 1
#         lst[i] = 1 # замена
# # print(i)   #   выведит индексы  0  1  2  3  4
# print(lst) #  выведит наши элементы [32, 1, 1, 1, 1]


# Напишите программу для печати всех уникальных значений в словаре. 
# Input:  [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"},
# {"VII": "S005"}, {"V":"S009"}, {"VIII":"S007"}] 
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}

# start_lst = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII": "S005"}, {"V":"S009"}, {"VIII":"S007"}]
# val_list = []  #  создал пустой лист
# for little_dict in start_lst:  # для маленького словаря из данного словаря?
#     print(little_dict.values()) # вытащил значение из словаря в столбик
# dict_values(['S001'])
# dict_values(['S002'])
# dict_values(['S001'])
# dict_values(['S005'])
# dict_values(['S005'])
# dict_values(['S009'])
# dict_values(['S007'])

# добавим все значения затолкать в этот список
# start_lst = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII": "S005"}, {"V":"S009"}, {"VIII":"S007"}]
# val_list = []  #  создал пустой лист=  little_dict.values() возьмем и добавим  в val_list
# for little_dict in start_lst:  # из нашего списка достаем словарь ,словаря из данного словаря?
#     for val in little_dict.values():  # из этого словаря через values достает только значения 
#         val_list.append(val)   #  little_dict.values() возьмем и добавим  в val_list через append
# print(set(val_list)) # напечатсть через set уникальне значения {'S002', 'S009', 'S007', 'S001', 'S005'}


# достали словарь из словаря:
# shop_dict = {
# 0:{'name':'стул','кол-во': 3} , # ключ 0, 5, 8 не изменяемы, а значения можно менять в фиг скобках
# 5:{'name': 'стол','кол-во': 7} ,
# 8:{'name': 'диван' , 'кол-во': 10}
# }
# # print(shop_dict[5]['name'])
# print(shop_dict[8]) # получили некую базу данных  достали словарь из словаря:



# домашняя из 3 го семинара, черновик , мысли:
# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# Ввод:
# ноутбук
# Вывод:
# 12
# *Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет 
# определенную ценность. В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко; 
# D, G – 2 очка; 
# B, C, M, P – 3 очка; 
# F, H, V, W, Y – 4 очка; 
# K – 5 очков;
# J, X – 8 очков; 
# Q, Z – 10 очков. 
# А русские буквы оцениваются так: 
# А, В, Е, И, Н, О, Р, С, Т – 1 очко; 
# Д, К, Л, М, П, У – 2 очка; 
# Б, Г, Ё, Ь, Я – 3 очка; 
# Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков; 
# Ш, Э, Ю – 8 очков; 
# Ф, Щ, Ъ – 10 очков. 
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы.

# word = input('Введи слово и я посчитаю твои баллы: ')  # это списала задачу
# en_let = {'A':1,'E':1,'I':1,'O':1,'U':1,'L':1,'N':1,'S':1,'T':1,'R':1, 
#            'D':2,'G':2,
#            'B':3, 'C':3, 'M':3, 'P':3, 
#            'F':4, 'H':4, 'V':4, 'W':4, 'Y':4,
#            'K':5,
#            'J':8, 'X':8, 
#            'Q':10, 'Z':10}
# ru_let = {'А':1,'В':1,'Е':1,'И':1,'Н':1,'О':1,'Р':1,'С':1,'Т':1,
#            'Д':2,'К':2,'Л':2, 'М':2, 'П':2, 'У':2,
#            'Б':3, 'Г':3, 'Ё':3, 'Ь':3, 'Я':3,
#            'Й':4, 'Ы':4, 
#            'Ж':5, 'З':5, 'Х':5, 'Ц':5,'Ч':5,
#            'Ш':8, 'Э':8, 'Ю':8,
#            'Ф':10, 'Ш':10, 'Ъ':10}
# def sum_let(word):
#     total = 0
#     for letter in word:
#         if letter.upper() in en_let:
#             total += en_let[letter.upper()]
#         elif letter.upper() in ru_let:
#             total += ru_let[letter.upper()]
#     return total
# print('За слово', word.upper() , 'ты набрал', sum_let(word), 'баллов')

# start_lst = [{"А": "1"}, {"В": "1"}, {"Е": "1"}, {"И": "1"}, {"Н": "1"}, {"О": "1"}, {"Р": "1"}, {"С": "1"}, {"Т": "1"}]
# print("Введите слово: ")
# a = input()
# print(start_lst["А"]) 
# print(start_lst)

# d = dict()  # создали пустой словарь и можем сами создавать свой ключ:
# d['А'] = '1' # чтобы добавлять какие то значения, мы должны в нашем словаре указать ключ q 
# d['В'] = '1' # чтобы добавлять какие то значения, мы должны в нашем словаре указать ключ q 
# print(d) # выведит в одну строку {'q': 'gwerty', 'w': 'werty'}


# print("Введите первое число: ") #- ввод данных через инпут, если числа, то инт добавить
# a = int(input())
# b = int(input("Введите второе число: "))
# print(a, '+', b, '=', a + b)

# for item in dictionary: # for (k,v) in dictionary.items(): как фор взаимодействует с нашим словарем?:
#     print(item)  # будут выводится только наши ключи: up left down right
#     print('{}: {}'.format(item, dictionary[item])) # если к словарю обращаться то сначала к ключу('{}: {}'.format(item,) и 2е к значению dictionary[item]

# Операции со множествами в Python
# a = {а, в, е, и, н, о, Р, С, Т}
# b = {а, в, е, и, н,}
# c = a.copy() # c = {1, 2, 3, 5, 8} можем скопировать из а
# u = a.union(b) # u = {1, 2, 3, 5, 8, 13, 21} объединение а и b и раз уникальные значения 2 будет один раз
# i = a.intersection(b) # i = {8, 2, 5} пересечение т.е найти те элементы, которые есть в обеих множествах